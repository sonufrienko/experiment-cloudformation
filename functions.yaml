---
Parameters:
  EnvironmentType:
    Type: String
    Default: test
    AllowedValues:
      - test
      - dev
      - prod
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
  AvailabilityZone:
    Type: AWS::EC2::AvailabilityZone::Name

Mappings:
  RegionEnvMap:
    eu-west-1:
      test: "c4.large"
      dev: "c4.large"
      prod: "c4.xlarge"
    eu-north-1:
      test: "c5a.large"
      dev: "c5a.large"
      prod: "c5a.xlarge"

Conditions:
  ProdCondition: !Equals [!Ref EnvironmentType, prod]

Resources:
  ProxyServer:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !FindInMap [RegionEnvMap, !Ref "AWS::Region", !Ref EnvironmentType]
      ImageId: ami-0aef57767f5404a3c # Ubuntu 20.04 LTS
      AvailabilityZone: !Ref AvailabilityZone
      KeyName: !Ref KeyName
      Monitoring: !If [ProdCondition, "true", "false"]

  SSHSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable 22
      SecurityGroupIngress:
        - CidrIp: !Sub
            - "${ip}/32"
            - ip: !ImportValue stack1:ProxyServerIP
          FromPort: 22
          IpProtocol: tcp
          ToPort: 22
        - CidrIp: !Sub
            - ${ip}/${size}
            - { ip: !GetAtt ProxyServer.PublicIp, size: 32 }
          FromPort: 22
          IpProtocol: tcp
          ToPort: 22

Outputs:
  ProxyServerIP:
    Description: ProxyServer public IP address
    Value: !GetAtt ProxyServer.PublicIp
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", ProxyServerIP]]
